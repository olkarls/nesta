date: 2010-07-01
categories: open-source, blog
read more: Read more about has_permalink
heading: New gem "has_permalink"
template: article

# has_permalink

Yesterday I published my first <a href="http://rubygems.org/gems/has_permalink">gem</a> to <a href="http://rubygems.org">rubygems.org</a>

<!--more-->

A gem for generating permalinks to use in an URL from any other attribute in the same <code>ActiveRecord</code> model.

## Why?

This isn't exactly new, there are alot of other similiar gems out there but there is one problem with those. Those gems removes every charachter that isn't used in english and since I'm swedish and most of my clients are I needed the convert those charachters too.

This <code>TestCase</code> describes it better:

    :::ruby
    def test_should_generate_permalink
      post = Post.new(:title => "title with åäö")
      post.valid?
      assert_equal "title-with-aao", post.permalink
    end

## Installation

put this in your gemfile:

    :::ruby
    gem "has_permalink"

And run in your terminal:

    :::bash
    $ bundle install

If your model doesn't already have the permalink attribute you can run this generator command:

    :::bash
    $ rails g has_permalink [Model]

That will generate a migration which adds a permalink attribute <code>[Model]</code> and adds a index. Don't forget to:

    :::bash
    $ rake db:migrate

## Example

The permalink attribute is generated by the <code>before_validation</code> callback and is only transformed if it's blank.

    :::ruby
    class Post < ActiveRecord::Base
      has_permalink
    end

The plugin assumes that the permalink attribute is generated from the title attribute but it can be changed by providing an argument like this:

    :::ruby
    class Post < ActiveRecord::Base
      has_permalink :heading
    end

Use this syntax your controller:

    :::ruby
    def show
      @post = Post.find_by_permalink(params[:id])
    end

Please try it out and give me some feedback. Get the source code <a href="http://github.com/olkarls/has_permalink">here</a>.

## TODO

* Extend <code>ActiveModel</code> instead of <code>ActiveRecord</code>
* Create a generator test
* Give the possibility to call the "permalink" field something else